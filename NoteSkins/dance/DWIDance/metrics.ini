# DWI Noteskin
# Conversion by Jose_Varela
# In this Metrics.ini, i'll explain to my best of my ability
# each command that i setup here.

# Sets the global noteskin. this is actually used in the other noteskins to load this as their Fallback.
[Global]
FallbackNoteSkin=

[NoteDisplay]
# Draw the head for when another note is exactly where a hold begins.
DrawHoldHeadForTapsOnSameRow=1

# The animation for the notes.
# This depends on how many frames you added.
TapNoteAnimationLengthInBeats=4

# The animation for the addition notes.
# This depends on how many frames you added.
TapAdditionAnimationLengthInBeats=4

# The animation for the mines.
# This depends on how many frames you added.
# Although, i control this now by a .xml.
TapMineAnimationLengthInBeats=1

# The animation for the Hold Head.
# doesn't matter.  Only 1 frame anyway.
# It needs a value, othewise it will do a overflow.
HoldHeadAnimationLengthInBeats=4

# The animation for the Top Cap.
# doesn't matter.  Only 1 frame anyway.
# It needs a value, othewise it will do a overflow.
HoldTopCapAnimationLengthInBeats=4

# The animation for the Bottom Cap.
# doesn't matter.  Only 1 frame anyway.
# It needs a value, othewise it will do a overflow.
HoldBottomCapAnimationLengthInBeats=4

# The animation for the Hold Body.
# doesn't matter.  Only 1 frame anyway.
# It needs a value, othewise it will do a overflow.
HoldBodyAnimationLengthInBeats=4

# The animation for the Hold Tail.
# doesn't matter.  Only 1 frame anyway.
# It needs a value, othewise it will do a overflow.
HoldTailAnimationLengthInBeats=4

# Determines if the Notes are Vivid.
TapNoteAnimationIsVivid=1

# Determines if the Addition Notes are Vivid.
TapAdditionAnimationIsVivid=0

# Determines if the Mines are Vivid.
TapMineAnimationIsVivid=0

# Determines if the Hold Heads are Vivid.
HoldHeadAnimationIsVivid=0

# Determines if the Top Caps are Vivid.
HoldTopCapAnimationIsVivid=0

# Determines if the Hold Bodies are Vivid.
HoldBodyAnimationIsVivid=0

# Determines if the Bottom Caps are Vivid.
HoldBottomCapAnimationIsVivid=0

# Determines if the Hold Tails are Vivid.
HoldTailAnimationIsVivid=0

# Determines if the Notes are Divided by color.
TapNoteAnimationIsNoteColor=1

# Determines if the Addition Notes are Divided by color.
TapAdditionAnimationIsNoteColor=0

# Determines if the Hold Heads are Divided by color.
HoldHeadAnimationIsNoteColor=0

# Determines if the Top Caps are Divided by color.
HoldTopCapAnimationIsNoteColor=0

# Determines if the Hold Bodies are Divided by color.
HoldBodyAnimationIsNoteColor=0

# Determines if the Bottom Caps are Divided by color.
HoldBottomCapAnimationIsNoteColor=0

# Determines if the Hold Tails are Divided by color.
HoldTailAnimationIsNoteColor=0

# Determine when to Stop Drawing the hold body from the head.
StartDrawingHoldBodyOffsetFromHead=0

# Determine when to Stop Drawing the hold body from the tail.
# Here, i set it to the top of the tail, so it ends the hold with
# The tip of the tail.
StopDrawingHoldBodyOffsetFromTail=-32	# top of tail

# Determines the darkness of the hold when its released.
# The lower, the darker it will be.
HoldNGGrayPercent=0

# I have no goddamn clue of what this is.
UseLighting=0

# This is the best order when reverse is on.
ReverseDrawOrder=1101

# Needed for some elements where Bumpy is involved.
HoldHeadIsAboveWavyParts=1
HoldTailIsAboveWavyParts=1

# This determines if the hold's Head and Tail should be inverted, when played in reverse.
# Remember how OITG always fucked the holds for reverse? This is the reason.
# OITG has this always enabled by default, destroying DDR-Like noteskins without letting people know.
FlipHeadAndTailWhenReverse=0

# DWI's Noteskin system handles the note explosion depending on the Song's BPM.
# So i recreated that here.

[GhostArrowDim]
NoneCommand=
MissCommand=
BooCommand=finishtweening;draworder,90;zoom,0.9;diffuse,0.29,1,1,1;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,0.29,1,1,0
GoodCommand=finishtweening;draworder,90;zoom,0.9;diffuse,0.29,1,1,1;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,0.29,1,1,0
GreatCommand=finishtweening;draworder,90;zoom,0.9;diffuse,#02fb5f;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,0.29,1,1,0
PerfectCommand=finishtweening;draworder,90;zoom,0.9;diffuse,#fefe56;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,1,1,0.29,0
MarvelousCommand=finishtweening;draworder,90;zoom,0.9;diffuse,1,1,1,1;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,1,1,1,0
NGCommand=finishtweening;draworder,90;zoom,0;
OKCommand=finishtweening;draworder,90;zoom,0.9;diffuse,#fefe56;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,1,1,0.29,0

[GhostArrowBright]
NoneCommand=
MissCommand=
BooCommand=finishtweening;draworder,90;zoom,0.9;diffuse,0.29,1,1,1;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,0.29,1,1,0
GoodCommand=finishtweening;draworder,90;zoom,0.9;diffuse,0.29,1,1,1;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,0.29,1,1,0
GreatCommand=finishtweening;draworder,90;zoom,0.9;diffuse,#02fb5f;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,0.29,1,1,0
PerfectCommand=finishtweening;draworder,90;zoom,0.9;diffuse,#fefe56;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,1,1,0.29,0
MarvelousCommand=finishtweening;draworder,90;zoom,0.9;diffuse,1,1,1,1;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,1,1,1,0
NGCommand=finishtweening;draworder,90;zoom,0;
OKCommand=finishtweening;draworder,90;zoom,0.9;diffuse,#fefe56;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,1,1,0.29,0

[GhostArrowMine]
NoneCommand=
MissCommand=blend,add;diffuse,#F85800;zoom,1;rotationz,0;linear,0.3;rotationz,90;linear,0.3;rotationz,180;diffusealpha,0
BooCommand=
GoodCommand=
GreatCommand=
PerfectCommand=
MarvelousCommand=
NGCommand=finishtweening;draworder,90;zoom,0;
OKCommand=finishtweening;draworder,90;zoom,0.9;diffuse,#fefe56;sleep,0.5 / GAMESTATE:GetCurBPS();diffuse,1,1,0.29,0

[ReceptorArrow]
NoneCommand=finishtweening;z,+1;zoom,0.75;sleep,0.25 / GAMESTATE:GetCurBPS();zoom,0.875;sleep,0.25 / GAMESTATE:GetCurBPS();zoom,1;
MissCommand=finishtweening;z,+1
BooCommand=finishtweening;z,+1;zoom,0.85;sleep,0.15 / GAMESTATE:GetCurBPS();zoom,1;
GoodCommand=finishtweening;z,+1;zoom,0.85;sleep,0.15 / GAMESTATE:GetCurBPS();zoom,1;
GreatCommand=finishtweening;z,+1;zoom,0.85;sleep,0.15 / GAMESTATE:GetCurBPS();zoom,1;
PerfectCommand=finishtweening;z,+1;zoom,0.85;sleep,0.15 / GAMESTATE:GetCurBPS();zoom,1;
MarvelousCommand=finishtweening;z,+1;zoom,0.85;sleep,0.15 / GAMESTATE:GetCurBPS();zoom,1;
NGCommand=finishtweening;
OKCommand=finishtweening;z,+1;zoom,0.85;sleep,0.15 / GAMESTATE:GetCurBPS();zoom,1;